name: Build and deploy Node.js app to Azure Web App - cookiestore-app

on:
  push:
    branches:
      - main
  workflow_dispatch:

env:
  SQUARE_ACCESS_TOKEN:        ${{ secrets.SQUARE_ACCESS_TOKEN }}
  SQUARE_LOCATION_ID:         ${{ secrets.SQUARE_LOCATION_ID }}
  FIREBASE_PRIVATE_KEY:       ${{ secrets.FIREBASE_PRIVATE_KEY }}
  NEXT_PUBLIC_FIREBASE_CLIENT_EMAIL:   ${{ secrets.NEXT_PUBLIC_FIREBASE_CLIENT_EMAIL }}
  NEXT_PUBLIC_FIREBASE_API_KEY:        ${{ secrets.NEXT_PUBLIC_FIREBASE_API_KEY }}
  NEXT_PUBLIC_FIREBASE_AUTH_DOMAIN:    ${{ secrets.NEXT_PUBLIC_FIREBASE_AUTH_DOMAIN }}
  NEXT_PUBLIC_FIREBASE_PROJECT_ID:     ${{ secrets.NEXT_PUBLIC_FIREBASE_PROJECT_ID }}
  NEXT_PUBLIC_FIREBASE_STORAGE_BUCKET: ${{ secrets.NEXT_PUBLIC_FIREBASE_STORAGE_BUCKET }}
  NEXT_PUBLIC_FIREBASE_MESSAGING_SENDER_ID: ${{ secrets.NEXT_PUBLIC_FIREBASE_MESSAGING_SENDER_ID }}
  NEXT_PUBLIC_FIREBASE_APP_ID:         ${{ secrets.NEXT_PUBLIC_FIREBASE_APP_ID }}
  NEXT_PUBLIC_FIREBASE_MEASUREMENT_ID: ${{ secrets.NEXT_PUBLIC_FIREBASE_MEASUREMENT_ID }}
  AZURE_STORAGE_CONNECTION_STRING:     ${{ secrets.AZURE_STORAGE_CONNECTION_STRING }}

jobs:
  build:
    environment: pr           # ← GitHub ‘pr’ environment 사용
    runs-on: ubuntu-latest
    permissions:
      contents: read

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '20.x'

      - name: Install & build
        run: |
          npm ci
          npm run build

      - name: Zip for deployment
        run: |
          zip -r release.zip . \
            -x "node_modules/*" \
            -x ".git/*" \
            -x "release.zip"

      - name: Upload build artifact
        uses: actions/upload-artifact@v4
        with:
          name: app-package
          path: release.zip

  deploy:
    environment: pr           # ← 요기도 동일하게
    needs: build
    runs-on: ubuntu-latest
    permissions:
      id-token: write
      contents: read

    env:
      AZURE_CLIENT_ID:       ${{ secrets.AZURE_CLIENT_ID }}
      AZURE_TENANT_ID:       ${{ secrets.AZURE_TENANT_ID }}
      AZURE_SUBSCRIPTION_ID: ${{ secrets.AZURE_SUBSCRIPTION_ID }}

    steps:
      - name: Download build artifact
        uses: actions/download-artifact@v4
        with:
          name: app-package

      - name: Azure Login via OIDC
        uses: azure/login@v2
        with:
          client-id:       ${{ env.AZURE_CLIENT_ID }}
          tenant-id:       ${{ env.AZURE_TENANT_ID }}
          subscription-id: ${{ env.AZURE_SUBSCRIPTION_ID }}

      - name: Deploy to Azure Web App
        uses: azure/webapps-deploy@v3
        with:
          app-name:       cookiestore-app
          package:        release.zip
          enable-oryx-build:  true
          # enable-oryx-build 기본(true) → Azure가 서버에서 다시 빌드하도록
          app-settings: |
            SQUARE_ACCESS_TOKEN=${{ env.SQUARE_ACCESS_TOKEN }}
            SQUARE_LOCATION_ID=${{ env.SQUARE_LOCATION_ID }}
            FIREBASE_PRIVATE_KEY=${{ env.FIREBASE_PRIVATE_KEY }}
            NEXT_PUBLIC_FIREBASE_CLIENT_EMAIL=${{ env.NEXT_PUBLIC_FIREBASE_CLIENT_EMAIL }}
            NEXT_PUBLIC_FIREBASE_API_KEY=${{ env.NEXT_PUBLIC_FIREBASE_API_KEY }}
            NEXT_PUBLIC_FIREBASE_AUTH_DOMAIN=${{ env.NEXT_PUBLIC_FIREBASE_AUTH_DOMAIN }}
            NEXT_PUBLIC_FIREBASE_PROJECT_ID=${{ env.NEXT_PUBLIC_FIREBASE_PROJECT_ID }}
            NEXT_PUBLIC_FIREBASE_STORAGE_BUCKET=${{ env.NEXT_PUBLIC_FIREBASE_STORAGE_BUCKET }}
            NEXT_PUBLIC_FIREBASE_MESSAGING_SENDER_ID=${{ env.NEXT_PUBLIC_FIREBASE_MESSAGING_SENDER_ID }}
            NEXT_PUBLIC_FIREBASE_APP_ID=${{ env.NEXT_PUBLIC_FIREBASE_APP_ID }}
            NEXT_PUBLIC_FIREBASE_MEASUREMENT_ID=${{ env.NEXT_PUBLIC_FIREBASE_MEASUREMENT_ID }}
            AZURE_STORAGE_CONNECTION_STRING=${{ env.AZURE_STORAGE_CONNECTION_STRING }}
